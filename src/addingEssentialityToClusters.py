#!/usr/bin/python
#Developed by Pablo Vicente-Munuera

#Purpose:
# Add relevante information: (Essentiality, EBC, communicability angle, distance)
# to the clusters generated by some function in R and then, put them together.

#Openning file to write all the clusters in one file
allFile = open('../data/clustersTogether/ClusterSpinglass25spinsWeighted.csv', 'w')

#We get through all of the clusters
for i in range(1,127) :
	#Reading the cluster $i$
	nameFi = '../data/clustersPPIs/Spinglass25spinsWeighted' + str(i) + '.csv'
	ebcs = open(nameFi, 'r')
	#Read th header
	ebcs.readline()
	#Print the actual number of file
	print i

	#The output file of the cluster with all the information (Essentiality, EBC, communicability angle, distance)
	nameOut = '../data/clustersPPIs/Spinglass25spinsWeightedInfo' + str(i) + '.csv'
	final = open(nameOut, 'w')

	#Parsing the information
	for ebc in ebcs:
		row = ebc.split(';')
		ppi = row[1]
		ppi = ppi.strip('[]"')
		ppi = ppi.split(' ')
		#print ppi

		#Reading the proper information to add to the cluster
		essentialPPIs = open('../data/PPIsinfo/PPIsinfo.csv', 'r')
		#Read the f***ing header
		essentialPPIs.readline()

		#We walk the file of the information
		for essentialPPI in essentialPPIs:
			proteins = essentialPPI.split(';')

			#If the both genes of the PPI correspond to the read PPI
			if (proteins[0] == ppi[0] and proteins[1] == ppi[1]) or (proteins[1] == ppi[0] and proteins[0] == ppi[1]) :
				#It's added here (to both files)
				final.write(essentialPPI[:-2] + ";" + row[2])
				allFile.write(essentialPPI[:-2] + ";" + row[2])
				break

#Closing file... Important!
allFile.close()